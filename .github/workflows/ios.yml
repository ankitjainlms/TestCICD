name: üöÄ Generate JWT Token and Trigger Xcode Cloud Build

on:
  workflow_dispatch:  # Allows manual trigger
  push:
    branches:
      - main  # Change this if necessary

jobs:
  generate_jwt:
    runs-on: macos-latest
    steps:
      - name: üõ† Checkout Repository
        uses: actions/checkout@v4

      - name: üîç Debug GitHub Secrets
        run: |
          if [ -z "${{ secrets.APPSTORE_KEY_ID }}" ]; then echo "‚ùå APPSTORE_KEY_ID is missing!"; exit 1; fi
          if [ -z "${{ secrets.APPSTORE_ISSUER_ID }}" ]; then echo "‚ùå APPSTORE_ISSUER_ID is missing!"; exit 1; fi
          if [ -z "${{ secrets.APPSTORE_PRIVATE_KEY }}" ]; then echo "‚ùå APPSTORE_PRIVATE_KEY is missing!"; exit 1; fi
          echo "‚úÖ All required secrets are set!"

      - name: üõ† Install Dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install pyjwt cryptography

      - name: üîë Decode Base64-Encoded Private Key
        run: |
          echo "$APPSTORE_PRIVATE_KEY" | base64 --decode > AuthKey.p8 || { echo "‚ùå Failed to decode APPSTORE_PRIVATE_KEY"; exit 1; }

      - name: üîë Generate JWT Token (Python)
        env:
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
        run: python3 generate_jwt.py

      - name: üöÄ Start Xcode Cloud Build
        run: |
          curl -X POST "https://api.appstoreconnect.apple.com/v1/ciBuildRuns" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "data": {
                "type": "ciBuildRuns",
                "relationships": {
                  "workflow": {
                    "data": {
                      "type": "ciWorkflows",
                      "id": "${{ secrets.XCODE_CLOUD_WORKFLOW_ID }}"
                    }
                  }
                }
              }
            }'
